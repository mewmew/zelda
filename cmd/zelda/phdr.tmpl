{{ $root := . -}}

; === [ Program headers ] ======================================================

; Segment types.
PT_LOAD    equ 1 ; Loadable segment.
PT_DYNAMIC equ 2 ; Dynamic linking information segment.
PT_INTERP  equ 3 ; Pathname of interpreter.

; Segment flags.
PF_R equ 0x4 ; Readable.
PF_W equ 0x2 ; Writable.
PF_X equ 0x1 ; Executable.

phdr_off equ phdr - BASE_R_SEG

phdr:

{{- range $i, $v := .ProgHdrs }}

{{ h2 .Title }}

  .{{ .Name }}:
{{- if $root.Arch64 }}
	dd      {{ .Type }}	; type: Segment type
	dd      {{ .Flags }}	; flags: Segment flags
	dq      {{ .Name }}_off	; offset: Segment file offset
	dq      {{ .Name }}	; vaddr: Segment virtual address
	dq      {{ .Name }}	; paddr: Segment physical address
	dq      {{ .Name }}.size	; filesz: Segment size in file
	dq      {{ .Name }}.size	; memsz: Segment size in memory
	dq      {{ .Align }}	; align: Segment alignment
{{- else }}
	dd      {{ .Type }}	; type: Segment type
	dd      {{ .Name }}_off	; offset: Segment file offset
	dd      {{ .Name }}	; vaddr: Segment virtual address
	dd      {{ .Name }}	; paddr: Segment physical address
	dd      {{ .Name }}.size	; filesz: Segment size in file
	dd      {{ .Name }}.size	; memsz: Segment size in memory
	dd      {{ .Flags }}	; flags: Segment flags
	dd      {{ .Align }}	; align: Segment alignment
{{- end }}

{{- if eq $i 0 }}

.entsize equ $ - phdr
{{- end }}

{{- end }}

.size  equ $ - phdr
.count equ .size / .entsize

; === [/ Program headers ] =====================================================

